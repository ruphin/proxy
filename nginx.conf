user nginx;
worker_processes 4;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings from https://cipherli.st/
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    # ssl_stapling on; # Requires nginx >= 1.3.7
    # ssl_stapling_verify on; # Requires nginx => 1.3.7
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    ##
    # Other security related settings
    ##

    # Add header for CORS
    add_header Access-Control-Allow-Origin $http_origin always;

    # Add header for HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Add header for CSP
    # add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.google-analytics.com; img-src 'self' https://www.google-analytics.com https://blzgdapipro-a.akamaihd.net; connect-src 'self' https://www.google-analytics.com";

    ##
    # Logging Settings
    ##

    access_log off;
    error_log /var/log/nginx/error.log;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_proxied any; # Also gzip proxied requests (all requests through here are proxied)
    gzip_vary on; # Set "Vary: Accept-Encoding" header for CDN
    gzip_min_length  1100;
    gzip_buffers  4 32k;
    gzip_types    application/javascript application/octet-stream image/jpeg image/png video/mp4;
    gzip_disable "msie6";

    # HTTP 1.1 support
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $proxy_connection;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;

    # If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
    # scheme used to connect to this server
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
    # Connection header that may have been passed to this server
    map $http_upgrade $proxy_connection {
        default upgrade;
        '' close;
    }

    ##
    # Redirect all traffic on http to https
    ##

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    ##
    # Catchall that drops connection to unknown domains
    ##

    server {
        server_name _;
        listen 443 ssl http2;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;
        return 444;
    }

    ##
    # Overwebs
    ##

    upstream overwebs {
        server overwebs:80;
    }

    server {
        server_name overwebs.ruph.in;
        listen 443 ssl http2;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://overwebs;
        }
    }



    ##
    # Overwebs-next
    ##

    upstream overwebs-app {
        server overwebs-app:80;
    }

    server {
        server_name overwebs-next.ruph.in;
        listen 443 ssl http2;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://overwebs-app;
        }
    }

    ##
    # Webcomponents
    ##

    upstream webcomponents {
        server webcomponents:80;
    }

    server {
        listen 443 ssl http2;
        server_name webcomponents.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://webcomponents;
        }
    }


    ##
    # Devsummit
    ##

    upstream devsummit {
        server devsummit:80;
    }

    server {
        listen 443 ssl http2;
        server_name devsummit.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://devsummit;
        }
    }


    ##
    # ithinkpark
    ##

    upstream ithinkpark {
        server ithinkpark:80;
    }

    server {
        listen 443 ssl http2;
        server_name ithinkpark.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://ithinkpark;
        }
    }

    ##
    # Cryptodex
    ##

    upstream cryptodex {
        server cryptodex:80;
    }

    server {
        listen 443 ssl http2;
        server_name cryptodex.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://cryptodex;
        }
    }


    ##
    # Slidem
    ##

    upstream slidem {
        server slidem:80;
    }

    server {
        listen 443 ssl http2;
        server_name slidem.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://slidem;
        }
    }


    ##
    # Meetup Nov
    ##

    upstream meetupnov {
        server meetupnov:80;
    }

    server {
        listen 443 ssl http2;
        server_name meetupnov.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://meetupnov;
        }
    }


    ##
    # Dai wallet app
    ##

    upstream daiwallet {
        server daiwallet:80;
    }

    server {
        listen 443 ssl http2;
        server_name daiwallet.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://daiwallet;
        }
    }



    ##
    # Dai talk
    ##

    upstream daitalk {
        server daitalk:80;
    }

    server {
        listen 443 ssl http2;
        server_name daitalk.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://daitalk;
        }
    }


    ##
    # Eventcash
    ##

    upstream eventcash {
        server eventcash:80;
    }

    upstream eventcashapi {
        server 51.15.88.0:80;
    }

    server {
        listen 443 ssl http2;
        server_name eventcash.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://eventcash;
        }
        
        location /api {
            proxy_pass http://eventcashapi;
        }
    }

    ##
    # Devdays talk
    ##

    upstream devdays {
        server devdays:80;
    }

    server {
        listen 443 ssl http2;
        server_name devdays.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://devdays;
        }
    }



    ##
    # Building a Framework talk
    ##

    upstream building-a-framework {
        server building-a-framework:80;
    }

    server {
        listen 443 ssl http2;
        server_name building-a-framework.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://building-a-framework;
        }
    }


    ##
    # Bitcoin-poll
    ##

    upstream bitcoin-poll {
        server bitcoin-poll:80;
    }

    server {
        listen 443 ssl http2;
        server_name bitcoin-poll.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://bitcoin-poll;
        }
    }

    ##
    # Google Index checking experiment
    ##

    upstream googleindexcheck {
        server googleindexcheck:80;
    }

    server {
        listen 443 ssl http2;
        server_name googleindexcheck.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://googleindexcheck;
        }
    }


    ##
    # Static file serving
    ##

    server {
        listen 443 ssl http2;
        server_name files.ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            alias /files/;
            gzip_static on;
            expires max;
            add_header Cache-Control public;
        }
    }


    ##
    # ruph.in
    ##

    upstream ruphin {
        server ruphin:80;
    }

    server {
        listen 443 ssl http2;
        server_name ruph.in;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://ruphin;
        }
    }

    ##
    # gluonjs.org
    ##

    upstream gluonjs {
        server gluonjs:80;
    }

    server {
        listen 443 ssl http2;
        server_name gluonjs.org;
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        location / {
            proxy_pass http://gluonjs;
        }
    }

    
}
